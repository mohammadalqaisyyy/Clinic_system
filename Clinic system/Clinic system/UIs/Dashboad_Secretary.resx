<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuCircleProgressbar1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>